module Program

open Euler2.RecursionImpl
open Euler29.RecursionImpl
open ModularImpl
open UtilitiesImpl
open MapImpl
open ListGenerationImpl

printfn "Euler 2 problem"
let border = 4000000
let predicate = isEven
printfn "Sum of the even-valued terms of Fibonacci sequence"
printfn $"\tUsing non-tail recursion: {fibonacciSumNonTailRecFunction border predicate}"
printfn $"\tUsing tail recursion: {fibonacciSumTailRecFunction border predicate}"
printfn $"\tUsing modular implementation: {filterAndSumFibonacciSequence border predicate}"
printfn $"\tUsing modular implementation (generating sequence with map): {sumOfFibonacciWithWithMap border predicate}"
printfn $"\tUsing fold generation: {sumFibonacciFold border predicate}"
printfn $"\tUsing infinite sequence: {sumEndlessSequence border predicate}"

printfn "Euler 29 problem"
printfn "Amount of distinct terms are in the sequence generated by a^b for 2 <= a <= 100 and 2 <= b <= 100"

printfn $"\tUsing non-tail recursion: {distinctPowersNonTailRecCount 2 100}"
printfn $"\tUsing tail recursion: {distinctPowersTailRecCount 2 100}"
